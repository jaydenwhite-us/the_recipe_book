Int i,icol,irow,j,k,l,ll,n=a.nrows(),m=b.ncols();
Doub big,dum,pivinv;

VecInt indxc(n),indxr(n),ipiv(n); These integer arrays are used for bookkeeping on the pivoting.

for (j=0;j<n;j++) ipiv[j]=0; 
for (i=0;i<n;i++) {   This is the main loop over the columns to be reduced.
  big=0.0; 
  
  //Find biggest unpivoted element
  for (j=i;j<n;j++){  loop rows
    if (ipiv[j] == 1) continue; check the row has not been pivoted.

    for (k=i;k<n;k++) { loop columns
      if (ipiv[k] == 0) { check column the has not been pivoted. meaning element has not moved.

        if (abs(a[j][k]) <= big) continue;
        big = abs(a[j][k]); //Store largest element in row and its location.
        irow = j;
        icol = k;
      }
    }
  }
++(ipiv[icol]);


for (j=0;j<n;j++) ipiv[j]=0; 
for (i=0;i<n;i++) {   This is the main loop over the columns to be reduced.
  big=0.0; 
  for (j=0;j<n;j++)  This is the outer loop of the search for a pivot element.
    if (ipiv[j] != 1) 
      for (k=0;k<n;k++) {
        if (ipiv[k] == 0) {
          //Find row max
          let (lgst, (x, y)) = matrix.row_max(j);
          big = lgst;
          irow = x;
          icol = y;
  }
}
++(ipiv[icol]);